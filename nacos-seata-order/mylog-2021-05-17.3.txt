channel valid false,channel:[id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:TMROLE,err:cost 30014 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:TMROLE,err:cost 30014 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
will destroy channel:[id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xe0109596, L:/192.168.88.1:65158 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
channel [id: 0xbe74ec7a, L:/192.168.88.1:64784 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0xbe74ec7a, L:/192.168.88.1:64784 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0xbe74ec7a, L:/192.168.88.1:64784 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]) will closed
return to pool, rm channel:[id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0xbe74ec7a, L:/192.168.88.1:64784 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
channel [id: 0x3692ac54, L:/192.168.88.1:65203 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x3692ac54, L:/192.168.88.1:65203 - R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0x3692ac54, L:/192.168.88.1:65203 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]) will closed
channel [id: 0xa448136c, L:/192.168.88.1:65234 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0xa448136c, L:/192.168.88.1:65234 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0xa448136c, L:/192.168.88.1:65234 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]) will closed
wait response error:cost 30015 ms,ip:null,request:RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:TMROLE,err:cost 30015 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:TMROLE,err:cost 30015 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:TMROLE,err:cost 30015 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(TmRpcClient#0, [id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0x3692ac54, L:/192.168.88.1:65203 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
wait response error:cost 30003 ms,ip:null,request:RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:RMROLE,err:cost 30003 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:RMROLE,err:cost 30003 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:RMROLE,err:cost 30003 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(RmRpcClient#0, [id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0xa448136c, L:/192.168.88.1:65234 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
channel [id: 0xba736c7f, L:/192.168.88.1:65263 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0xba736c7f, L:/192.168.88.1:65263 - R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xba736c7f, L:/192.168.88.1:65263 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]) will closed
channel [id: 0x31bfaddf, L:/192.168.88.1:65284 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x31bfaddf, L:/192.168.88.1:65284 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x31bfaddf, L:/192.168.88.1:65284 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x31bfaddf, L:/192.168.88.1:65284 ! R:/192.168.88.1:8091]) will closed
wait response error:cost 30009 ms,ip:null,request:RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:TMROLE,err:cost 30009 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]) will closed
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:TMROLE,err:cost 30009 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:TMROLE,err:cost 30009 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel inactive: [id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xba736c7f, L:/192.168.88.1:65263 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
HV000001: Hibernate Validator 6.0.21.Final
No active profile set, falling back to default profiles: default
BeanFactory id=ae6fb061-e115-313f-925b-40d30572bd04
Bean 'com.cssl.feign.FeignAccountClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.cloud.alibaba.seata-io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration' of type [io.seata.spring.boot.autoconfigure.properties.SpringCloudAlibabaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'seataProperties' of type [io.seata.spring.boot.autoconfigure.properties.SeataProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'io.seata.spring.boot.autoconfigure.SeataAutoConfiguration' of type [io.seata.spring.boot.autoconfigure.SeataAutoConfiguration$$EnhancerBySpringCGLIB$$2f7ca22b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'springUtils' of type [io.seata.spring.boot.autoconfigure.util.SpringUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Automatically configure Seata
The file name of the operation is registry.conf
load ExtConfigurationProvider[null] extension by class[io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider]
load extConfiguration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
Bean 'configProperties' of type [io.seata.spring.boot.autoconfigure.properties.registry.ConfigProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'configFileProperties' of type [io.seata.spring.boot.autoconfigure.properties.registry.ConfigFileProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
The file name of the operation is file.conf
load extConfiguration:FileConfiguration$$EnhancerByCGLIB$$862af1eb
Bean 'serviceProperties' of type [io.seata.spring.boot.autoconfigure.properties.file.ServiceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Initializing Global Transaction Clients ... 
Could not found property transport.thread-factory.boss-thread-prefix, try to use default value instead.
Could not found property transport.thread-factory.worker-thread-prefix, try to use default value instead.
Could not found property transport.thread-factory.share-boss-worker, try to use default value instead.
Bean 'transportProperties' of type [io.seata.spring.boot.autoconfigure.properties.file.TransportProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Could not found property transport.thread-factory.worker-thread-size, try to use default value instead.
RpcClientBootstrap has started
Transaction Manager Client is initialized. applicationId[seata-order] txServiceGroup[bdqn_tx_group]
Bean 'clientProperties' of type [io.seata.spring.boot.autoconfigure.properties.file.ClientProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Async Commit Buffer Limit: 10000
RpcClientBootstrap has started
Resource Manager is initialized. applicationId[seata-order] txServiceGroup[bdqn_tx_group]
Global Transaction Clients are initialized. 
Bean 'com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration' of type [com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration$FeignBeanPostProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'seataFeignObjectWrapper' of type [com.alibaba.cloud.seata.feign.SeataFeignObjectWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8111 (http)
Initializing ProtocolHandler ["http-nio-8111"]
Starting service [Tomcat]
Starting Servlet engine: [Apache Tomcat/9.0.39]
Loaded Apache Tomcat Native library [1.2.23] using APR version [1.7.0].
APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
OpenSSL successfully initialized [OpenSSL 1.1.1c  28 May 2019]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1905 ms
{dataSource-1} inited
load RegistryProvider[Nacos] extension by class[io.seata.discovery.registry.nacos.NacosRegistryProvider]
will connect to 192.168.88.1:8091
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
load Codec[SEATA] extension by class[io.seata.codec.seata.SeataCodec]
will connect to 192.168.88.1:8091
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
will connect to 192.168.88.1:8091
channel [id: 0x332fb2b2, L:/192.168.88.1:65358 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x332fb2b2, L:/192.168.88.1:65358 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x332fb2b2, L:/192.168.88.1:65358 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]) will closed
channel [id: 0xc42000d9, L:/192.168.88.1:65361 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0xc42000d9, L:/192.168.88.1:65361 - R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xc42000d9, L:/192.168.88.1:65361 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]) will closed
wait response error:cost 30023 ms,ip:null,request:RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:RMROLE,err:cost 30023 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.RmRpcClient.registerResource(RmRpcClient.java:198)
	at io.seata.rm.AbstractResourceManager.registerResource(AbstractResourceManager.java:120)
	at io.seata.rm.datasource.DataSourceManager.registerResource(DataSourceManager.java:149)
	at io.seata.rm.DefaultResourceManager.registerResource(DefaultResourceManager.java:114)
	at io.seata.rm.datasource.DataSourceProxy.init(DataSourceProxy.java:91)
	at io.seata.rm.datasource.DataSourceProxy.<init>(DataSourceProxy.java:80)
	at io.seata.rm.datasource.DataSourceProxy.<init>(DataSourceProxy.java:69)
	at com.cssl.DataSourceConfig.dataSourceProxy(DataSourceConfig.java:33)
	at com.cssl.DataSourceConfig$$EnhancerBySpringCGLIB$$44d5f413.CGLIB$dataSourceProxy$2(<generated>)
	at com.cssl.DataSourceConfig$$EnhancerBySpringCGLIB$$44d5f413$$FastClassBySpringCGLIB$$71cbb19b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.cssl.DataSourceConfig$$EnhancerBySpringCGLIB$$44d5f413.dataSourceProxy(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1404)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.cssl.NacosSeataOrderApplication.main(NacosSeataOrderApplication.java:17)
channel valid false,channel:[id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]) will closed
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:RMROLE,err:cost 30023 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:RMROLE,err:cost 30023 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.RmRpcClient.registerResource(RmRpcClient.java:198)
	at io.seata.rm.AbstractResourceManager.registerResource(AbstractResourceManager.java:120)
	at io.seata.rm.datasource.DataSourceManager.registerResource(DataSourceManager.java:149)
	at io.seata.rm.DefaultResourceManager.registerResource(DefaultResourceManager.java:114)
	at io.seata.rm.datasource.DataSourceProxy.init(DataSourceProxy.java:91)
	at io.seata.rm.datasource.DataSourceProxy.<init>(DataSourceProxy.java:80)
	at io.seata.rm.datasource.DataSourceProxy.<init>(DataSourceProxy.java:69)
	at com.cssl.DataSourceConfig.dataSourceProxy(DataSourceConfig.java:33)
	at com.cssl.DataSourceConfig$$EnhancerBySpringCGLIB$$44d5f413.CGLIB$dataSourceProxy$2(<generated>)
	at com.cssl.DataSourceConfig$$EnhancerBySpringCGLIB$$44d5f413$$FastClassBySpringCGLIB$$71cbb19b.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.cssl.DataSourceConfig$$EnhancerBySpringCGLIB$$44d5f413.dataSourceProxy(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1404)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$111/1260440107.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.cssl.NacosSeataOrderApplication.main(NacosSeataOrderApplication.java:17)
channel inactive: [id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]
Bean[com.cssl.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$9c20fdd2] with name [orderServiceImpl] would use interceptor [io.seata.spring.annotation.GlobalTransactionalInterceptor]
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
No URLs will be polled as dynamic configuration sources.
To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
Initializing ExecutorService 'applicationTaskExecutor'
Initializing ExecutorService 'Nacso-Watch-Task-Scheduler'
Starting ProtocolHandler ["http-nio-8111"]
Tomcat started on port(s): 8111 (http) with context path ''
nacos registry, DEFAULT_GROUP seata-order 172.17.2.52:8111 register finished
wait response error:cost 30002 ms,ip:null,request:RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:TMROLE,err:cost 30002 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:TMROLE,err:cost 30002 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:TMROLE,err:cost 30002 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
will destroy channel:[id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xc42000d9, L:/192.168.88.1:65361 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
Started NacosSeataOrderApplication in 39.201 seconds (JVM running for 41.422)
0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:195)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:190)
	... 16 common frames omitted
channel valid false,channel:[id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(RmRpcClient#0, [id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x332fb2b2, L:/192.168.88.1:65358 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
Initializing Spring DispatcherServlet 'dispatcherServlet'
Initializing Servlet 'dispatcherServlet'
Completed initialization in 8 ms
load ContextCore[null] extension by class[io.seata.core.context.ThreadLocalContextCore]
load TransactionManager[null] extension by class[io.seata.tm.DefaultTransactionManager]
TransactionManager Singleton io.seata.tm.DefaultTransactionManager@1735a129
load LoadBalance[null] extension by class[io.seata.discovery.loadbalance.RandomLoadBalance]
will connect to 192.168.88.1:8091
channel [id: 0x5be4ef25, L:/192.168.88.1:65416 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x5be4ef25, L:/192.168.88.1:65416 - R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0x5be4ef25, L:/192.168.88.1:65416 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]) will closed
channel [id: 0x1a840ee4, L:/192.168.88.1:65434 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x1a840ee4, L:/192.168.88.1:65434 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x1a840ee4, L:/192.168.88.1:65434 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]) will closed
wait response error:cost 30012 ms,ip:null,request:RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:TMROLE,err:cost 30012 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:TMROLE,err:cost 30012 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:TMROLE,err:cost 30012 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(TmRpcClient#0, [id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
will connect to 192.168.88.1:8091
wait response error:cost 30003 ms,ip:null,request:RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:RMROLE,err:cost 30003 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:RMROLE,err:cost 30003 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:RMROLE,err:cost 30003 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(RmRpcClient#0, [id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]) will closed
channel [id: 0x7396ac27, L:/192.168.88.1:65435 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x7396ac27, L:/192.168.88.1:65435 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 - R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]) will closed
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:195)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient.sendMsgWithResponse(AbstractRpcRemotingClient.java:229)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient.sendMsgWithResponse(AbstractRpcRemotingClient.java:236)
	at io.seata.tm.DefaultTransactionManager.syncCall(DefaultTransactionManager.java:95)
	at io.seata.tm.DefaultTransactionManager.begin(DefaultTransactionManager.java:53)
	at io.seata.tm.api.DefaultGlobalTransaction.begin(DefaultGlobalTransaction.java:102)
	at io.seata.tm.api.TransactionalTemplate.beginTransaction(TransactionalTemplate.java:123)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:58)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:106)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.cssl.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$9c20fdd2.saveOrder(<generated>)
	at com.cssl.controller.OrderController.takeOrder(OrderController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:190)
	... 69 common frames omitted
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.] with root cause
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient.sendMsgWithResponse(AbstractRpcRemotingClient.java:229)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient.sendMsgWithResponse(AbstractRpcRemotingClient.java:236)
	at io.seata.tm.DefaultTransactionManager.syncCall(DefaultTransactionManager.java:95)
	at io.seata.tm.DefaultTransactionManager.begin(DefaultTransactionManager.java:53)
	at io.seata.tm.api.DefaultGlobalTransaction.begin(DefaultGlobalTransaction.java:102)
	at io.seata.tm.api.TransactionalTemplate.beginTransaction(TransactionalTemplate.java:123)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:58)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:106)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.cssl.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$9c20fdd2.saveOrder(<generated>)
	at com.cssl.controller.OrderController.takeOrder(OrderController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:195)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:190)
	... 16 common frames omitted
channel valid false,channel:[id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x1a840ee4, L:/192.168.88.1:65434 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]
will connect to 192.168.88.1:8091
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x7396ac27, L:/192.168.88.1:65435 ! R:/192.168.88.1:8091]) will closed
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:195)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:190)
	... 16 common frames omitted
channel valid false,channel:[id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(TmRpcClient#0, [id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0x5be4ef25, L:/192.168.88.1:65416 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
channel [id: 0x713e0c84, L:/192.168.88.1:65505 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x713e0c84, L:/192.168.88.1:65505 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x713e0c84, L:/192.168.88.1:65505 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]) will closed
channel [id: 0xa266a2ab, L:/192.168.88.1:65514 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0xa266a2ab, L:/192.168.88.1:65514 - R:/192.168.88.1:8091]
ChannelHandlerContext(TmRpcClient#0, [id: 0xa266a2ab, L:/192.168.88.1:65514 - R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(TmRpcClient#0, [id: 0xa266a2ab, L:/192.168.88.1:65514 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
wait response error:cost 30006 ms,ip:null,request:RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:RMROLE,err:cost 30006 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
channel valid false,channel:[id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:RMROLE,err:cost 30006 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:RMROLE,err:cost 30006 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(RmRpcClient#0, [id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]) will closed
channel [id: 0x45956bfc, L:/192.168.88.1:65506 - R:/192.168.88.1:8091] read idle.
will destroy channel:[id: 0x45956bfc, L:/192.168.88.1:65506 - R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x45956bfc, L:/192.168.88.1:65506 - R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
ChannelHandlerContext(RmRpcClient#0, [id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]) will closed
RM will register :jdbc:mysql:///seata_order
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
wait response error:cost 30009 ms,ip:null,request:RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'}
0304 register RM failed.
io.seata.common.exception.FrameworkException: register error,role:TMROLE,err:cost 30009 ms
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:78)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:register error,role:TMROLE,err:cost 30009 ms
io.seata.common.exception.FrameworkException: can not register RM,err:register error,role:TMROLE,err:cost 30009 ms
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
NettyPool create channel to transactionRole:TMROLE,address:192.168.88.1:8091,msg:< RegisterTMRequest{applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
will connect to 192.168.88.1:8091
0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:195)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:190)
	... 16 common frames omitted
channel valid false,channel:[id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]
0101 can not connect to 192.168.88.1:8091 cause:can not register RM,err:can not connect to services-server.
io.seata.common.exception.FrameworkException: can not register RM,err:can not connect to services-server.
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:210)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.NettyClientChannelManager.reconnect(NettyClientChannelManager.java:175)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient$1.run(AbstractRpcRemotingClient.java:112)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset$$$capture(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Unknown Source)
ChannelHandlerContext(RmRpcClient#0, [id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]) will closed
channel inactive: [id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]
channel valid false,channel:[id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]
will destroy channel:[id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]
ChannelHandlerContext(RmRpcClient#0, [id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]) will closed
will connect to 192.168.88.1:8091
ChannelHandlerContext(RmRpcClient#0, [id: 0x713e0c84, L:/192.168.88.1:65505 ! R:/192.168.88.1:8091]) will closed
ChannelHandlerContext(RmRpcClient#0, [id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]) will closed
RM will register :jdbc:mysql:///seata_order
channel inactive: [id: 0x45956bfc, L:/192.168.88.1:65506 ! R:/192.168.88.1:8091]
NettyPool create channel to transactionRole:RMROLE,address:192.168.88.1:8091,msg:< RegisterRMRequest{resourceIds='jdbc:mysql:///seata_order', applicationId='seata-order', transactionServiceGroup='bdqn_tx_group'} >
0304 register RM failed.
io.seata.common.exception.FrameworkException: can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:195)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:58)
	at io.seata.core.rpc.netty.NettyPoolableFactory.makeObject(NettyPoolableFactory.java:34)
	at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
	at io.seata.core.rpc.netty.NettyClientChannelManager.doConnect(NettyClientChannelManager.java:206)
	at io.seata.core.rpc.netty.NettyClientChannelManager.acquireChannel(NettyClientChannelManager.java:103)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient.sendMsgWithResponse(AbstractRpcRemotingClient.java:229)
	at io.seata.core.rpc.netty.AbstractRpcRemotingClient.sendMsgWithResponse(AbstractRpcRemotingClient.java:236)
	at io.seata.tm.DefaultTransactionManager.syncCall(DefaultTransactionManager.java:95)
	at io.seata.tm.DefaultTransactionManager.begin(DefaultTransactionManager.java:53)
	at io.seata.tm.api.DefaultGlobalTransaction.begin(DefaultGlobalTransaction.java:102)
	at io.seata.tm.api.TransactionalTemplate.beginTransaction(TransactionalTemplate.java:123)
	at io.seata.tm.api.TransactionalTemplate.execute(TransactionalTemplate.java:58)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.handleGlobalTransaction(GlobalTransactionalInterceptor.java:106)
	at io.seata.spring.annotation.GlobalTransactionalInterceptor.invoke(GlobalTransactionalInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.cssl.service.impl.OrderServiceImpl$$EnhancerBySpringCGLIB$$9c20fdd2.saveOrder(<generated>)
	at com.cssl.controller.OrderController.takeOrder(OrderController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: io.seata.common.exception.FrameworkException: connect failed, can not connect to services-server.
	at io.seata.core.rpc.netty.RpcClientBootstrap.getNewChannel(RpcClientBootstrap.java:190)
	... 69 common frames omitted
channel valid false,channel:[id: 0xa266a2ab, L:/192.168.88.1:65514 ! R:/192.168.88.1:8091]
